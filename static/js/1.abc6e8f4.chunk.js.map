{"version":3,"sources":["ImagesAndIcons/loading.svg","Components/PDF.js"],"names":["pdfjs","GlobalWorkerOptions","workerSrc","version","PDF","props","useState","pagesArray","setPagesArray","useEffect","menuType","menu","file","options","onLoadError","error","alert","onSourceError","loading","style","height","width","alt","src","Loading","map","page","scale","pageNumber"],"mappings":"iOAAe,MAA0B,oC,eCOzCA,IAAMC,oBAAoBC,UAA1B,kDAAiFF,IAAMG,QAAvF,kBAqCeC,UAnCH,SAACC,GAAW,IAAD,EACiBC,mBAAS,IAD1B,mBACZC,EADY,KACAC,EADA,KAUnB,OAPAC,qBAAU,YACiB,SAAnBJ,EAAMK,UACiB,WAAnBL,EAAMK,UAEa,aAAnBL,EAAMK,WAHiBF,EAAc,CAAC,MAI/C,CAACH,EAAMM,OAGN,kCACI,cAAC,IAAD,CACAC,KAAMP,EAAMM,KACZE,QAAS,CAACX,UAAW,kBACrBY,YAAa,SAACC,GAAD,OAAWC,SACxBC,cAAe,kBACXD,MAAM,mEAEVE,QACI,qBACIC,MAAO,CAACC,OAAQ,IAAKC,MAAO,KAC5BC,IAAI,YACJC,IAAKC,IAXb,SAeKjB,EAAWkB,KAAI,SAACC,GAAD,OACZ,cAAC,IAAD,CAAiBC,MAAOtB,EAAMsB,MAAOC,WAAYF,EAAMR,QAAS,IAArDQ","file":"static/js/1.abc6e8f4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loading.6f932f5e.svg\";","import React, {useState, useEffect} from \"react\";\n\nimport Loading from \"../ImagesAndIcons/loading.svg\";\nimport {Document} from \"react-pdf\";\nimport {Page} from \"react-pdf\";\nimport {pdfjs} from \"react-pdf\"\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nconst PDF = (props) => {\n    const [pagesArray, setPagesArray] = useState([]);\n\n    useEffect(() => {\n        if (props.menuType === \"food\") setPagesArray([1]);\n        else if(props.menuType === \"drinks\")\n            setPagesArray([1]);\n        else if(props.menuType === \"catering\") setPagesArray([1]);\n    }, [props.menu]);\n\n    return (\n        <section>\n            <Document \n            file={props.menu}\n            options={{workerSrc: \"/pdf.worker.js\"}}\n            onLoadError={(error) => alert()}\n            onSourceError={() =>\n                alert(\"Looks like there was an error, refresh the page and try again.\")\n            }\n            loading={\n                <img\n                    style={{height: 150, width: 150}}\n                    alt=\"loading..\"\n                    src={Loading}\n                    ></img>\n            }\n            >\n                {pagesArray.map((page) => (\n                    <Page key={page} scale={props.scale} pageNumber={page} loading={\"\"} />\n                ))}\n            </Document>\n        </section>\n    );\n};\n\nexport default PDF;"],"sourceRoot":""}